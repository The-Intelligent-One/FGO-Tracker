plugins {
    id "java"
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.9"
    id "edu.sc.seis.launch4j" version "2.5.0"
    id "io.freefair.lombok" version "6.0.0-m2"
    id "org.beryx.runtime" version "1.12.4"
}

group "com.github.theintelligentone"
version "v0.3.0-beta"

def MAINPATH = "com.github.theintelligentone.fgotracker.Main"
mainClassName = MAINPATH

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.2"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.12.4"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.4"
    runtimeOnly "org.openjfx:javafx-graphics:16:win"
    runtimeOnly "org.openjfx:javafx-graphics:16:linux"
    runtimeOnly "org.openjfx:javafx-graphics:16:mac"
    compile 'org.kohsuke:github-api:1.132'
    compile "com.opencsv:opencsv:5.5"
    compile 'ch.qos.logback:logback-classic:1.2.5'
}

application {
    mainClassName MAINPATH
    applicationName = "FGO Tracker"
}

compileJava {
    options.compilerArgs.add("-encoding")
    options.compilerArgs.add("UTF-8")
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': MAINPATH
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

javafx {
    version = "16"
    modules = ["javafx.fxml", "javafx.controls", "javafx.swing", "javafx.web"]
}

launch4j {
    mainClassName MAINPATH
    copyConfigurable = []
    bundledJrePath = "./jre"
    bundledJre64Bit = true
    jdkPreference = "jdkOnly"
}

task embedJre {
    dependsOn("createExe")
    copy {
        from System.getenv("JAVA_HOME") + "/bin"
        into "${buildDir}/launch4j/jre/bin"
    }
    copy {
        from System.getenv("JAVA_HOME") + "/lib"
        into "${buildDir}/launch4j/jre/lib"
    }
    copy {
        from System.getenv("JAVA_HOME") + "/conf"
        into "${buildDir}/launch4j/jre/conf"
    }
}

runtime {
    options = ["--strip-debug", "--no-header-files", "--no-man-pages"]
}

clean {
    delete 'data'
}

