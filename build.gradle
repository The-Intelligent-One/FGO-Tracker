plugins {
    id "java"
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.9"
    id "edu.sc.seis.launch4j" version "2.5.0"
    id "io.freefair.lombok" version "6.0.0-m2"
    id "org.beryx.runtime" version "1.12.4"
}

def MAINPATH = "com.github.theintelligentone.fgotracker.Main"
mainClassName = MAINPATH

group "com.github.theintelligentone"
version "0.1.1"


repositories {
    mavenCentral()
}

dependencies {
    implementation "com.fasterxml.jackson.core:jackson-databind:2.11.1"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:win"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:mac"
    implementation "com.opencsv:opencsv:5.4"
}

application {
    getMainClass().set MAINPATH
    applicationName = "FGO Tracker"
}

task packageDistribution(type: Zip) {
    dependsOn("embedJre")
    destinationDirectory = file("$buildDir/dist")
    archiveVersion = ""
    from "$buildDir/launch4j"
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': MAINPATH
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

javafx {
    version = "16"
    modules = ["javafx.fxml", "javafx.controls"]
}

launch4j {
    mainClassName MAINPATH
    copyConfigurable = []
    bundledJrePath = "./jre"
    bundledJre64Bit = false
    jdkPreference = "jdkOnly"
}

task embedJre {
    dependsOn("createExe")
    doLast {
        copy {
            from System.getenv("JAVA_HOME") + "/bin"
            into "$buildDir/launch4j/jre/bin"
        }
        copy {
            from System.getenv("JAVA_HOME") + "/lib"
            into "$buildDir/launch4j/jre/lib"
        }
        copy {
            from System.getenv("JAVA_HOME") + "/conf"
            into "$buildDir/launch4j/jre/conf"
        }
    }
}

runtime {
    options = ["--strip-debug", "--no-header-files", "--no-man-pages"]
}

clean {
    delete 'data'
}

